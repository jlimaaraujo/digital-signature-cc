
package pt.ipvc.cartao.ccauth.soap;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.2
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SCMDService", targetNamespace = "http://Ama.Authentication.Service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SCMDService {


    /**
     * 
     * @param request
     * @return
     *     returns pt.ipvc.cartao.ccauth.soap.SignStatus
     */
    @WebMethod(operationName = "SCMDSign", action = "http://Ama.Authentication.Service/SCMDService/SCMDSign")
    @WebResult(name = "SCMDSignResult", targetNamespace = "http://Ama.Authentication.Service/")
    @RequestWrapper(localName = "SCMDSign", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.SCMDSign")
    @ResponseWrapper(localName = "SCMDSignResponse", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.SCMDSignResponse")
    public SignStatus scmdSign(
        @WebParam(name = "request", targetNamespace = "http://Ama.Authentication.Service/")
        SignRequest request);

    /**
     * 
     * @param applicationId
     * @param userId
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetCertificate", action = "http://Ama.Authentication.Service/SCMDService/GetCertificate")
    @WebResult(name = "GetCertificateResult", targetNamespace = "http://Ama.Authentication.Service/")
    @RequestWrapper(localName = "GetCertificate", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.GetCertificate")
    @ResponseWrapper(localName = "GetCertificateResponse", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.GetCertificateResponse")
    public String getCertificate(
        @WebParam(name = "applicationId", targetNamespace = "http://Ama.Authentication.Service/")
        byte[] applicationId,
        @WebParam(name = "userId", targetNamespace = "http://Ama.Authentication.Service/")
        String userId);

    /**
     * 
     * @param pin
     * @param applicationId
     * @param userId
     * @return
     *     returns pt.ipvc.cartao.ccauth.soap.SignStatus
     */
    @WebMethod(operationName = "GetCertificateWithPin", action = "http://Ama.Authentication.Service/SCMDService/GetCertificateWithPin")
    @WebResult(name = "GetCertificateWithPinResult", targetNamespace = "http://Ama.Authentication.Service/")
    @RequestWrapper(localName = "GetCertificateWithPin", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.GetCertificateWithPin")
    @ResponseWrapper(localName = "GetCertificateWithPinResponse", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.GetCertificateWithPinResponse")
    public SignStatus getCertificateWithPin(
        @WebParam(name = "applicationId", targetNamespace = "http://Ama.Authentication.Service/")
        byte[] applicationId,
        @WebParam(name = "userId", targetNamespace = "http://Ama.Authentication.Service/")
        String userId,
        @WebParam(name = "pin", targetNamespace = "http://Ama.Authentication.Service/")
        String pin);

    /**
     * 
     * @param code
     * @param processId
     * @param isBiometric
     * @param applicationId
     * @return
     *     returns pt.ipvc.cartao.ccauth.soap.SignResponse
     */
    @WebMethod(operationName = "ValidateOtp", action = "http://Ama.Authentication.Service/SCMDService/ValidateOtp")
    @WebResult(name = "ValidateOtpResult", targetNamespace = "http://Ama.Authentication.Service/")
    @RequestWrapper(localName = "ValidateOtp", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.ValidateOtp")
    @ResponseWrapper(localName = "ValidateOtpResponse", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.ValidateOtpResponse")
    public SignResponse validateOtp(
        @WebParam(name = "code", targetNamespace = "http://Ama.Authentication.Service/")
        String code,
        @WebParam(name = "processId", targetNamespace = "http://Ama.Authentication.Service/")
        String processId,
        @WebParam(name = "applicationId", targetNamespace = "http://Ama.Authentication.Service/")
        byte[] applicationId,
        @WebParam(name = "isBiometric", targetNamespace = "http://Ama.Authentication.Service/")
        Boolean isBiometric);

    /**
     * 
     * @param request
     * @param documents
     * @return
     *     returns pt.ipvc.cartao.ccauth.soap.SignStatus
     */
    @WebMethod(operationName = "SCMDMultipleSign", action = "http://Ama.Authentication.Service/SCMDService/SCMDMultipleSign")
    @WebResult(name = "SCMDMultipleSignResult", targetNamespace = "http://Ama.Authentication.Service/")
    @RequestWrapper(localName = "SCMDMultipleSign", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.SCMDMultipleSign")
    @ResponseWrapper(localName = "SCMDMultipleSignResponse", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.SCMDMultipleSignResponse")
    public SignStatus scmdMultipleSign(
        @WebParam(name = "request", targetNamespace = "http://Ama.Authentication.Service/")
        MultipleSignRequest request,
        @WebParam(name = "documents", targetNamespace = "http://Ama.Authentication.Service/")
        ArrayOfHashStructure documents);

    /**
     * 
     * @param processId
     * @param citizenId
     * @param applicationId
     * @return
     *     returns pt.ipvc.cartao.ccauth.soap.SignStatus
     */
    @WebMethod(operationName = "ForceSMS", action = "http://Ama.Authentication.Service/SCMDService/ForceSMS")
    @WebResult(name = "ForceSMSResult", targetNamespace = "http://Ama.Authentication.Service/")
    @RequestWrapper(localName = "ForceSMS", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.ForceSMS")
    @ResponseWrapper(localName = "ForceSMSResponse", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.ForceSMSResponse")
    public SignStatus forceSMS(
        @WebParam(name = "processId", targetNamespace = "http://Ama.Authentication.Service/")
        String processId,
        @WebParam(name = "citizenId", targetNamespace = "http://Ama.Authentication.Service/")
        String citizenId,
        @WebParam(name = "applicationId", targetNamespace = "http://Ama.Authentication.Service/")
        byte[] applicationId);

    /**
     * 
     * @param processId
     * @param applicationId
     * @return
     *     returns pt.ipvc.cartao.ccauth.soap.SignResponse
     */
    @WebMethod(operationName = "SignDocumentPooling", action = "http://Ama.Authentication.Service/SCMDService/SignDocumentPooling")
    @WebResult(name = "SignDocumentPoolingResult", targetNamespace = "http://Ama.Authentication.Service/")
    @RequestWrapper(localName = "SignDocumentPooling", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.SignDocumentPooling")
    @ResponseWrapper(localName = "SignDocumentPoolingResponse", targetNamespace = "http://Ama.Authentication.Service/", className = "pt.ipvc.cartao.ccauth.soap.SignDocumentPoolingResponse")
    public SignResponse signDocumentPooling(
        @WebParam(name = "applicationId", targetNamespace = "http://Ama.Authentication.Service/")
        byte[] applicationId,
        @WebParam(name = "processId", targetNamespace = "http://Ama.Authentication.Service/")
        String processId);

}
